{"version":3,"file":"component---src-templates-post-tsx-f37576ac8b8ee6141b3a.js","mappings":"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","sources":["webpack://@beomy/blog/./src/templates/post.tsx"],"sourcesContent":["import { Fragment, useState, useCallback, useMemo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, PageProps } from 'gatsby';\nimport { getSrc } from 'gatsby-plugin-image';\nimport { Disqus } from 'gatsby-plugin-disqus';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { IconButton, IconButtonStyles } from '@beomy/design-system';\nimport type { Data, MarkdownRemark } from '@/models/graphQL';\nimport { Dim } from '@/atoms';\nimport {\n  Seo,\n  Header,\n  Contents,\n  PostContents,\n  PostHeader,\n  TableOfContents,\n  PostNavigator,\n  Footer,\n  PostShare,\n} from '@/organisms';\nimport { usePost, useTheme } from '@/hooks';\n\ntype Context = {\n  previous: MarkdownRemark;\n  next: MarkdownRemark;\n  slug: string;\n};\n\nconst S = {\n  PostMain: styled.article`\n    width: calc(100% - 380px);\n    ${({ theme }) => theme.sizes.mediaQueries.sm} {\n      width: 100%;\n    }\n  `,\n  PostSub: styled.nav<{ active: boolean }>`\n    width: 380px;\n    height: 100%;\n    ${({ theme }) => theme.sizes.mediaQueries.sm} {\n      position: fixed;\n      top: 0;\n      right: 0;\n      width: 0;\n      z-index: ${({ theme }) => theme.zIndices.overlay};\n      > * {\n        transition: transform 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86),\n          opacity 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86),\n          box-shadow 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n      }\n      ${({ active }) =>\n        active &&\n        css`\n          width: 100%;\n        `}\n    }\n  `,\n  PostSubContents: styled.div<{ active: boolean }>`\n    position: fixed;\n    width: 340px;\n    padding: 10px;\n    margin-left: 40px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    top: 70px;\n    height: calc(100% - 70px);\n    fieldset {\n      + fieldset {\n        margin-top: 10px;\n      }\n    }\n    > ${IconButtonStyles.Wrapper} {\n      display: none;\n    }\n    ${({ theme }) => theme.sizes.mediaQueries.sm} {\n      top: 0;\n      right: 0;\n      height: 100%;\n      max-width: calc(100% - 60px);\n      margin: 0;\n      background-color: ${({ theme }) => theme.colors.background};\n      transform: ${({ active }) =>\n        active ? 'translateX(0%)' : 'translateX(100%)'};\n      > ${IconButtonStyles.Wrapper} {\n        display: inline-flex;\n        background-color: ${({ theme }) => theme.colors.background};\n        position: absolute;\n        left: -50px;\n        bottom: 20px;\n        transition: transform 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n        transform: ${({ active }) =>\n          active ? 'rotate(0deg)' : 'rotate(45deg)'};\n      }\n    }\n  `,\n};\n\nconst Post = ({ data, pageContext }: PageProps<Data, Context>) => {\n  const [isActive, setActive] = useState<boolean>(false);\n  const [theme] = useTheme();\n  const post = usePost(data.markdownRemark);\n  const previous = usePost(pageContext.previous);\n  const next = usePost(pageContext.next);\n\n  const handleClickCloseSub = useCallback(() => {\n    setActive((value) => !value);\n  }, []);\n\n  const prismUrl = useMemo(() => {\n    return theme === 'dark'\n      ? 'https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism-tomorrow.min.css'\n      : 'https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism.min.css';\n  }, [theme]);\n\n  const url = useMemo(\n    () => `${data.site.siteMetadata.siteUrl}${pageContext.slug}`,\n    [data.site.siteMetadata.siteUrl, pageContext.slug],\n  );\n\n  const disqusConfig = useMemo(\n    () => ({\n      url,\n      identifier: url,\n      title: post.title,\n    }),\n    [post.title, url],\n  );\n\n  return (\n    <Fragment>\n      <Seo\n        title={post.title}\n        description={post.summary}\n        path={pageContext.slug}\n        type=\"article\"\n        image={getSrc(data.file?.childImageSharp.gatsbyImageData)}\n        meta={[\n          {\n            property: 'article:published_time',\n            content: `${post.createdDate}T00:00:00+00:00`,\n          },\n        ]}\n      />\n      <Helmet>\n        <link rel=\"stylesheet\" href={prismUrl} />\n      </Helmet>\n      <Header />\n      <Contents\n        display=\"flex\"\n        flexDirection=\"row-reverse\"\n        lineHeight={2}\n        width={['screen.xs', 'screen.xs', 'screen.sm', 'screen.m']}\n      >\n        <S.PostSub active={isActive}>\n          <Dim active={isActive} onClick={() => setActive(false)} />\n          <S.PostSubContents active={isActive}>\n            <PostShare url={url} />\n            <TableOfContents\n              toc={post.tableOfContents}\n              onClick={() => setActive(false)}\n            />\n            <IconButton\n              icon=\"BsXLg\"\n              aria-label=\"toc\"\n              border\n              onClick={handleClickCloseSub}\n            />\n          </S.PostSubContents>\n        </S.PostSub>\n        <S.PostMain>\n          <PostHeader {...post} />\n          <PostContents html={post.html} />\n          <PostNavigator previous={previous} next={next} />\n          <Disqus key={theme} config={disqusConfig} />\n        </S.PostMain>\n      </Contents>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport const query = graphql`\n  query ($slug: String!, $image: [String]) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    file(relativePath: { in: $image }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        thumbnail: featured_img\n        summary\n      }\n      fields {\n        createdDate(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["S","PostMain","target","theme","sizes","mediaQueries","sm","PostSub","zIndices","overlay","active","PostSubContents","IconButtonStyles","colors","background","data","pageContext","useState","isActive","setActive","useTheme","post","usePost","markdownRemark","previous","next","handleClickCloseSub","useCallback","value","prismUrl","useMemo","url","site","siteMetadata","siteUrl","slug","disqusConfig","identifier","title","___EmotionJSX","Fragment","Seo","description","summary","path","type","image","getSrc","file","_data$file","childImageSharp","gatsbyImageData","meta","property","content","createdDate","Helmet","rel","href","Header","Contents","display","flexDirection","lineHeight","width","Dim","onClick","PostShare","TableOfContents","toc","tableOfContents","IconButton","icon","border","PostHeader","PostContents","html","PostNavigator","Disqus","key","config","Footer"],"sourceRoot":""}