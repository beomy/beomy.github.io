{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/javascript/cjs-amd-umd-esm/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://beomy.github.io"}},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8d848","images":{"fallback":{"src":"/static/a20b53f5eae2c06908534a3e28220312/f635c/js.png","srcSet":"/static/a20b53f5eae2c06908534a3e28220312/a5da5/js.png 300w,\n/static/a20b53f5eae2c06908534a3e28220312/cadb4/js.png 750w,\n/static/a20b53f5eae2c06908534a3e28220312/feb73/js.png 1080w,\n/static/a20b53f5eae2c06908534a3e28220312/6032c/js.png 1366w,\n/static/a20b53f5eae2c06908534a3e28220312/3d4b2/js.png 1920w,\n/static/a20b53f5eae2c06908534a3e28220312/f635c/js.png 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/static/a20b53f5eae2c06908534a3e28220312/29f5b/js.webp 300w,\n/static/a20b53f5eae2c06908534a3e28220312/11ba1/js.webp 750w,\n/static/a20b53f5eae2c06908534a3e28220312/089e1/js.webp 1080w,\n/static/a20b53f5eae2c06908534a3e28220312/ad4fd/js.webp 1366w,\n/static/a20b53f5eae2c06908534a3e28220312/d8a73/js.webp 1920w,\n/static/a20b53f5eae2c06908534a3e28220312/a28c0/js.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":1000}}},"markdownRemark":{"html":"<p>처음 자바스크립트는 모듈을 가져오거나 내보내는 방법이 없어, 하나의 파일에 모든 기능들이 들어가야 했습니다. CJS, AMD, UMD, ESM이 등장 후에는 모듈로 개발하고 배포할 수 있게 되었습니다. 이번 포스트에서는 모듈화 개발을 할 수 있게 한 CJS, AMD, UMD, ESM가 무엇인지 살펴보겠습니다.</p>\n<h2 id=\"cjs-commonjs\" style=\"position:relative;\">CJS (CommonJS)<a href=\"#cjs-commonjs\" aria-label=\"cjs commonjs permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>CommonJS(<a href=\"http://www.commonjs.org/\">http://www.commonjs.org/</a>)는 이름의 'Common'에서 알 수 있듯이 JavaScript를 브라우저에서뿐만 아니라 범용 언어로 사용할 수 있도록 하겠다는 의지를 가진 워킹 그룹입니다.</p>\n<h3 id=\"코드-예제\" style=\"position:relative;\">코드 예제<a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C\" aria-label=\"코드 예제 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>CJS를 사용하는 방법은 아래 코드와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 아래와 같이 require을 통해 package/lib 모듈을 변수에 담을 수 있습니다.</span>\n<span class=\"token keyword\">var</span> lib <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'package/lib'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 가져온 모듈을 아래와 같이 사용할 수 있습니다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  lib<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// foo 함수를 다른 파일에서 사용할 수 있도록, 다른 모듈로 추출될 수 있습니다.</span>\nexports<span class=\"token punctuation\">.</span>foobar <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"특징-동기\" style=\"position:relative;\">특징: 동기<a href=\"#%ED%8A%B9%EC%A7%95-%EB%8F%99%EA%B8%B0\" aria-label=\"특징 동기 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>CommonJS는 아래 코드와 같이 동기로 동작하는 특징을 가집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bar <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfoo<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'It is foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbar<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'It is bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>CommonJS는 동기적인 특징으로 서버사이드에 사용하기 용이합니다. (CommonJS의 첫 이름은 <a href=\"https://www.blueskyonmars.com/2009/01/29/what-server-side-javascript-needs/\">ServerJS</a> 였다고 합니다.) Node.js가 CommonJS를 채택하여 사용하고 있습니다.</p>\n<h3 id=\"cjs를-사용하는-라이브러리\" style=\"position:relative;\">CJS를 사용하는 라이브러리<a href=\"#cjs%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"cjs를 사용하는 라이브러리 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>브라우저\n<ul>\n<li>curl.js(<a href=\"http://github.com/unscriptable/curl\">http://github.com/unscriptable/curl</a>)</li>\n<li>SproutCore(<a href=\"http://sproutcore.com\">http://sproutcore.com</a>)</li>\n<li>PINF(<a href=\"http://github.com/pinf/loader-js\">http://github.com/pinf/loader-js</a>)</li>\n</ul>\n</li>\n<li>서버사이드\n<ul>\n<li>Node.js(<a href=\"http://nodejs.org\">http://nodejs.org</a>)</li>\n<li>Narwhal(<a href=\"https://github.com/tlrobinson/narwhal\">https://github.com/tlrobinson/narwhal</a>)</li>\n<li>Persevere(<a href=\"http://www.persvr.org\">http://www.persvr.org</a>)</li>\n<li>Wakanda(<a href=\"http://www.wakandasoft.com\">http://www.wakandasoft.com</a>)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"amd-asynchronous-module-definition\" style=\"position:relative;\">AMD (Asynchronous Module Definition)<a href=\"#amd-asynchronous-module-definition\" aria-label=\"amd asynchronous module definition permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>CommonJS는 모든 파일이 로컬 디스크에 있어 필요할 때 바로 불러올 수 있는 상황을 전제로 합니다. 즉 동기적인 동작이 가능한 서버사이드 자바스크립트 환경을 전제로 합니다. 브라우저에서 이런 방식은 필요한 모듈이 모두 다운로드할 때까지 아무것도 할 수 없는 상태가 되어 치명적인 단점이 됩니다.</p>\n<p>AMD 그룹은 비동기 상황에서 자바스크립트 모듈을 사용하기 위해 CommonJS에서 함께 논의하다 합의점을 이루지 못하고 독립한 그룹입니다. CommonJS가 자바스크립트를 브라우저 밖으로 꺼내기 위해 탄생된 그룹이고, AMD는 브라우저에 중점을 둔 그룹입니다.</p>\n<h3 id=\"코드-예제-1\" style=\"position:relative;\">코드 예제<a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-1\" aria-label=\"코드 예제 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>아래 코드는 AMD에서 모듈로 추출하는 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 종속성을 갖는 모듈인 'package/lib'를 모듈 선언부의 첫 번째 파라미터에 넣으면,</span>\n<span class=\"token comment\">// 'package/lib'은 콜백 함수의 lib 파라미터 안에 담깁니다.</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'package/lib'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">lib</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 로드된 종속 모듈을 아래와 같이 사용할 수 있습니다.</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    lib<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 생성된 foo 함수는 리턴을 통해 foobar라는 이름의 다른 모듈로 추출될 수 있습니다.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foobar</span><span class=\"token operator\">:</span> foo\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>선언된 모듈들을 아래와 같이 <code class=\"language-text\">require</code>로 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'package/myModule'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">myModule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myModule<span class=\"token punctuation\">.</span><span class=\"token function\">foobar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"특징-비동기\" style=\"position:relative;\">특징: 비동기<a href=\"#%ED%8A%B9%EC%A7%95-%EB%B9%84%EB%8F%99%EA%B8%B0\" aria-label=\"특징 비동기 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>브라우저는 네트워크를 통해 모듈들을 내려받기 때문에 비동기적으로 동작해야 합니다. AMD 이름의 'Asynchronous'에서 알 수 있듯이 AMD는 비동기 모듈에 대한 표준안을 다루고 있습니다. AMD는 비동기적인 특징으로 클라이언트 사이드 개발에 적합합니다.</p>\n<h3 id=\"amd를-사용하는-라이브러리\" style=\"position:relative;\">AMD를 사용하는 라이브러리<a href=\"#amd%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"amd를 사용하는 라이브러리 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>브라우저\n<ul>\n<li>RequireJS(<a href=\"http://requirejs.org\">http://requirejs.org</a>)</li>\n<li>curl.js(<a href=\"http://github.com/unscriptable/curl\">http://github.com/unscriptable/curl</a>)</li>\n<li>bdLoad(<a href=\"http://bdframework.org/bdLoad/\">http://bdframework.org/bdLoad/</a>)</li>\n<li>Yabble(<a href=\"http://github.com/jbrantly/yabble\">http://github.com/jbrantly/yabble</a>)</li>\n<li>PINF(<a href=\"http://github.com/pinf/loader-js\">http://github.com/pinf/loader-js</a>)</li>\n</ul>\n</li>\n<li>서버사이드\n<ul>\n<li>RequireJS(<a href=\"http://requirejs.org\">http://requirejs.org</a>)</li>\n<li>PINF(<a href=\"http://github.com/pinf/loader-js\">http://github.com/pinf/loader-js</a>)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"umd-universal-module-definition\" style=\"position:relative;\">UMD (Universal Module Definition)<a href=\"#umd-universal-module-definition\" aria-label=\"umd universal module definition permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>AMD와 CommonJS 두 그룹으로 나누어지다 보니 서로 호환되지 않는 문제가 발생하게 됩니다. 이것을 해결하기 위해 나온 것이 UMD입니다. UMD는 디자인 패턴에 더 가깝습니다. AMD와 CommonJS, window에 추가하는 방식까지 모두 가능한 모듈을 작성하는 방식입니다.</p>\n<h3 id=\"코드-예제-2\" style=\"position:relative;\">코드 예제<a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-2\" aria-label=\"코드 예제 2 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>AMD는 <code class=\"language-text\">define</code>을 사용하고, CommonJS는 <code class=\"language-text\">module.exports</code>를 사용합니다. 이 차이를 이용하여 UMD를 만들 수 있습니다. UMD는 두 부분으로 구성됩니다.</p>\n<ul>\n<li>모듈 로더를 확인하는 즉시 실행 함수(IIFE): 이 함수는 <code class=\"language-text\">root</code>(전역 범위)와 <code class=\"language-text\">factory</code>(모듈을 선언하는 함수) 2개의 파라미터를 가집니다.</li>\n<li>모듈을 생성하는 익명 함수: 이 함수가 즉시 실행 함수의 2번째 파라미터로 전달됩니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> define <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// AMD</span>\n    <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'exports'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> exports<span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">!==</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// CommonJS</span>\n    <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Browser globals</span>\n    <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>commonJsStrict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">exports<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//use b in some fashion.</span>\n\n  <span class=\"token comment\">// attach properties to the exports object to define</span>\n  <span class=\"token comment\">// the exported module properties.</span>\n  exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">action</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 코드를 보면, <code class=\"language-text\">exports</code>와 <code class=\"language-text\">module</code>이 존재하면 CommonJS 방식으로, <code class=\"language-text\">define</code>이 함수이고 <code class=\"language-text\">define.amd</code>가 존재할 경우 AMD 방식으로 그것도 아니라면 window 객체에 모듈을 내보냅니다.</p>\n<h3 id=\"특징-여러-모듈-로더에서-사용-가능\" style=\"position:relative;\">특징: 여러 모듈 로더에서 사용 가능<a href=\"#%ED%8A%B9%EC%A7%95-%EC%97%AC%EB%9F%AC-%EB%AA%A8%EB%93%88-%EB%A1%9C%EB%8D%94%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5\" aria-label=\"특징 여러 모듈 로더에서 사용 가능 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>UMD의 특징은 위에서 말했던 것처럼 AMD와 CommonJS 모두 사용 가능하다는 점입니다. AMD는 클라이언트 사이드에서 많이 사용되고, CommonJS는 서버 사이드에서 많이 사용되기 때문에, UMD를 사용하면 두 개의 모듈을 따로 만들 필요가 없게 됩니다.</p>\n<h2 id=\"esm-ecmascript-module\" style=\"position:relative;\">ESM (ECMAScript Module)<a href=\"#esm-ecmascript-module\" aria-label=\"esm ecmascript module permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>ES6에 자바스크립트 모듈 기능이 추가되었습니다.</p>\n<h3 id=\"코드-예제-3\" style=\"position:relative;\">코드 예제<a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-3\" aria-label=\"코드 예제 3 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>아래 코드와 같이 ESM을 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> lib <span class=\"token keyword\">from</span> <span class=\"token string\">'package/lib'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  lib<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">foobar</span><span class=\"token operator\">:</span> foo\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"특징-자바스크립트-자체-모듈-시스템\" style=\"position:relative;\">특징: 자바스크립트 자체 모듈 시스템<a href=\"#%ED%8A%B9%EC%A7%95-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%90%EC%B2%B4-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"특징 자바스크립트 자체 모듈 시스템 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>ESM은 ECMAScript에서 지원하는 자바스크립트 공식 모듈 시스템입니다. 아직 브라우저에서 <code class=\"language-text\">import</code>와 <code class=\"language-text\">export</code>를 지원하지 않아 번들러를 함께 사용해야 합니다.</p>\n<h3 id=\"부록-script-typemodule-srcindexmjs\" style=\"position:relative;\">부록: <code class=\"language-text\">&lt;script type=\"module\" src=\"index.mjs\"></code><a href=\"#%EB%B6%80%EB%A1%9D-script-typemodule-srcindexmjs\" aria-label=\"부록 script typemodule srcindexmjs permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">&lt;script></code> 태그에 <code class=\"language-text\">type=\"module\"</code>을 선언하면 자바스크립트 파일은 모듈로 동작합니다. 이때 모듈이라는 것을 명확히 알기 위해서 <code class=\"language-text\">mjs</code> 확장자를 사용하도록 권장합니다. 예제를 살펴보면,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>foo.mjs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bar.mjs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// foo.mjs</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo</span>\n<span class=\"token comment\">// 변수 x는 전역 변수가 아니며 window 객체의 프로퍼티도 아니다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// bar.mjs</span>\n<span class=\"token comment\">// import 사용이 가능합니다.</span>\n<span class=\"token keyword\">import</span> test <span class=\"token keyword\">from</span> <span class=\"token string\">'./module.mjs'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 변수 x는 foo.mjs에서 선언한 변수 x와 스코프가 다른 변수이다.</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// bar</span>\n<span class=\"token comment\">// 변수 x는 전역 변수가 아니며 window 객체의 프로퍼티도 아니다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// module.mjs</span>\n<span class=\"token keyword\">const</span> test <span class=\"token operator\">=</span> <span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// export 사용이 가능합니다.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> test<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">type=\"module\"</code>을 사용하면 해당 파일에 <code class=\"language-text\">import</code>와 <code class=\"language-text\">export</code> 사용이 가능합니다. 또한 파일마다 독립적인 스코프를 가져, <code class=\"language-text\">foo.mjs</code> 파일과 <code class=\"language-text\">bar.mjs</code>파일의 <code class=\"language-text\">window</code>는 서로 공유되지 않습니다.</p>\n<p><code class=\"language-text\">type=\"module\"</code>는 아직 많은 브라우저에서 모듈 시스템을 지원하지 않기 때문에 webpack이나 rollup 등의 번들러를 사용하는 것이 좋습니다.</p>\n<h2 id=\"요약\" style=\"position:relative;\">요약<a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>CJS(CommonJS): 동기적인 특징으로 서버 사이드에서 사용하기 용이합니다.</li>\n<li>AMD(Asynchronous Module Definition): 비동기적인 특징으로 클라이언트 사이드에서 사용하기 용기합니다.</li>\n<li>UMD(Universal Module Definition): CJS와 AMD 모두 사용 가능한 모듈을 만들기 위해 사용됩니다.</li>\n<li>ESM(ECMAScript Module): 자바스크립트 공식 모듈 시스템입니다.\n<ul>\n<li><code class=\"language-text\">&lt;script type=\"module\" src=\"index.mjs\"></code>을 사용하여 브라우저에서도 모듈 시스템을 사용할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"참고\" style=\"position:relative;\">참고<a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<ul>\n<li><a href=\"https://d2.naver.com/helloworld/12864\">https://d2.naver.com/helloworld/12864</a></li>\n<li><a href=\"https://iam-song.tistory.com/28\">https://iam-song.tistory.com/28</a></li>\n<li><a href=\"https://www.zerocho.com/category/JavaScript/post/5b67e7847bbbd3001b43fd73\">https://www.zerocho.com/category/JavaScript/post/5b67e7847bbbd3001b43fd73</a></li>\n<li><a href=\"https://dev.to/iggredible/what-the-heck-are-cjs-amd-umd-and-esm-ikm\">https://dev.to/iggredible/what-the-heck-are-cjs-amd-umd-and-esm-ikm</a></li>\n<li><a href=\"https://minjung-jeon.github.io/AMD-CommonJS-RequireJS/\">https://minjung-jeon.github.io/AMD-CommonJS-RequireJS/</a></li>\n<li><a href=\"https://velog.io/@doondoony/JavaScript-Module-System\">https://velog.io/@doondoony/JavaScript-Module-System</a></li>\n<li><a href=\"https://velog.io/@zeros0623/JavaScript-ModuleCommonJS-Nodejs-RequireJS-AMD-ESM-UMD\">https://velog.io/@zeros0623/JavaScript-ModuleCommonJS-Nodejs-RequireJS-AMD-ESM-UMD</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/CommonJS\">https://ko.wikipedia.org/wiki/CommonJS</a></li>\n<li><a href=\"https://programmingsummaries.tistory.com/321\">https://programmingsummaries.tistory.com/321</a></li>\n<li><a href=\"https://helloworldjavascript.net/pages/293-module.html\">https://helloworldjavascript.net/pages/293-module.html</a></li>\n<li><a href=\"https://riptutorial.com/ko/javascript/example/16339/%EB%B2%94%EC%9A%A9-%EB%AA%A8%EB%93%88-%EC%A0%95%EC%9D%98--umd-\">https://riptutorial.com/ko/javascript/example/16339/범용-모듈-정의--umd-</a></li>\n<li><a href=\"https://blog.rhostem.com/posts/2019-06-23-universal-module-definition-pattern\">https://blog.rhostem.com/posts/2019-06-23-universal-module-definition-pattern</a></li>\n<li><a href=\"https://poiemaweb.com/es6-module\">https://poiemaweb.com/es6-module</a></li>\n<li><a href=\"https://velog.io/@widian/%EC%9B%B9%EC%97%90%EC%84%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AA%A8%EB%93%88-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">https://velog.io/@widian/웹에서-자바스크립트-모듈-사용하기</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#cjs-commonjs\">CJS (CommonJS)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C\">코드 예제</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A7%95-%EB%8F%99%EA%B8%B0\">특징: 동기</a></li>\n<li><a href=\"#cjs%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">CJS를 사용하는 라이브러리</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#amd-asynchronous-module-definition\">AMD (Asynchronous Module Definition)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-1\">코드 예제</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A7%95-%EB%B9%84%EB%8F%99%EA%B8%B0\">특징: 비동기</a></li>\n<li><a href=\"#amd%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">AMD를 사용하는 라이브러리</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#umd-universal-module-definition\">UMD (Universal Module Definition)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-2\">코드 예제</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A7%95-%EC%97%AC%EB%9F%AC-%EB%AA%A8%EB%93%88-%EB%A1%9C%EB%8D%94%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5\">특징: 여러 모듈 로더에서 사용 가능</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#esm-ecmascript-module\">ESM (ECMAScript Module)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C-3\">코드 예제</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A7%95-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%90%EC%B2%B4-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C\">특징: 자바스크립트 자체 모듈 시스템</a></li>\n<li><a href=\"#%EB%B6%80%EB%A1%9D-script-typemodule-srcindexmjs\">부록: <code class=\"language-text\">&lt;script type=\"module\" src=\"index.mjs\"></code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></p>\n</li>\n</ul>","timeToRead":8,"excerpt":"처음 자바스크립트는 모듈을 가져오거나 내보내는 방법이 없어, 하나의 파일에 모든 기능들이 들어가야 했습니다. CJS, AMD, UMD, ESM…","frontmatter":{"title":"[JavaScript] CJS, AMD, UMD, ESM","thumbnail":"javascript/js.png","summary":"자바스크립트를 모듈화할 수 있게 한 CJS, AMD, UMD, ESM에 대해 살펴보겠습니다."},"fields":{"createdDate":"2020-05-25"}}},"pageContext":{"slug":"/tech/javascript/cjs-amd-umd-esm/","image":"javascript/js.png","next":{"frontmatter":{"title":"[Svelte] 스벨트 입문 A부터 Z까지"},"fields":{"slug":"/tech/svelte/inflearn-svelte-for-beginner/"}},"previous":{"frontmatter":{"title":"[Svelte] Vue와 Svelte 비교"},"fields":{"slug":"/tech/svelte/vue-vs-svelte/"}}}},"staticQueryHashes":["1817256549","2192852387","3417480192"]}