{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/vuejs/initialize-mixin-layer/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://beomy.github.io"}},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3667f690df14d116a821ba4acb8686fb/f635c/vuejs.png","srcSet":"/static/3667f690df14d116a821ba4acb8686fb/a5da5/vuejs.png 300w,\n/static/3667f690df14d116a821ba4acb8686fb/cadb4/vuejs.png 750w,\n/static/3667f690df14d116a821ba4acb8686fb/feb73/vuejs.png 1080w,\n/static/3667f690df14d116a821ba4acb8686fb/6032c/vuejs.png 1366w,\n/static/3667f690df14d116a821ba4acb8686fb/3d4b2/vuejs.png 1920w,\n/static/3667f690df14d116a821ba4acb8686fb/f635c/vuejs.png 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/static/3667f690df14d116a821ba4acb8686fb/29f5b/vuejs.webp 300w,\n/static/3667f690df14d116a821ba4acb8686fb/11ba1/vuejs.webp 750w,\n/static/3667f690df14d116a821ba4acb8686fb/089e1/vuejs.webp 1080w,\n/static/3667f690df14d116a821ba4acb8686fb/ad4fd/vuejs.webp 1366w,\n/static/3667f690df14d116a821ba4acb8686fb/d8a73/vuejs.webp 1920w,\n/static/3667f690df14d116a821ba4acb8686fb/a28c0/vuejs.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":1000}}},"markdownRemark":{"html":"<p>이번 포스트에서는 <a href=\"/tech/vuejs/initialize-vue-core-function/\">2. Initialize - Vue 코어 함수</a>에서 이야기 했던 <code class=\"language-text\">src/core/instance/index.js</code> 파일의  5개의 mixin에 대해 알아보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./init'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> stateMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./state'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> renderMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./render'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> eventsMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./events'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> lifecycleMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lifecycle'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> warn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../util/index'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Vue</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vue is a constructor and should be called with the `new` keyword'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_init</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">initMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">stateMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">eventsMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">lifecycleMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">renderMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Vue</code></pre></div>\n<p><code class=\"language-text\">src/core/instance/index.js</code> 파일부터 코드를 따라가도록 하겠습니다.</p>\n<h2 id=\"initmixin-함수\" style=\"position:relative;\"><code class=\"language-text\">initMixin</code> 함수<a href=\"#initmixin-%ED%95%A8%EC%88%98\" aria-label=\"initmixin 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">initMixin</code> 함수는 <code class=\"language-text\">src/core/instance/init.js</code>에 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/* @flow */</span>\n\n<span class=\"token keyword\">import</span> config <span class=\"token keyword\">from</span> <span class=\"token string\">'../config'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initProxy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./proxy'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./state'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initRender <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./render'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initEvents <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./events'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> mark<span class=\"token punctuation\">,</span> measure <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../util/perf'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initLifecycle<span class=\"token punctuation\">,</span> callHook <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lifecycle'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initProvide<span class=\"token punctuation\">,</span> initInjections <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./inject'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> extend<span class=\"token punctuation\">,</span> mergeOptions<span class=\"token punctuation\">,</span> formatComponentName <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../util/index'</span>\n\n<span class=\"token keyword\">let</span> uid <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">initMixin</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Vue</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">_init</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token comment\">// merge options</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options <span class=\"token operator\">&amp;&amp;</span> options<span class=\"token punctuation\">.</span>_isComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// optimize internal component instantiation</span>\n      <span class=\"token comment\">// since dynamic options merging is pretty slow, and none of the</span>\n      <span class=\"token comment\">// internal component options needs special treatment.</span>\n      <span class=\"token function\">initInternalComponent</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      vm<span class=\"token punctuation\">.</span>$options <span class=\"token operator\">=</span> <span class=\"token function\">mergeOptions</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">resolveConstructorOptions</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        options <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        vm\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">initInternalComponent</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">vm</span><span class=\"token operator\">:</span> Component<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> InternalComponentOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">resolveConstructorOptions</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Ctor</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> Ctor<span class=\"token punctuation\">.</span>options\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Ctor<span class=\"token punctuation\">.</span>super<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> superOptions <span class=\"token operator\">=</span> <span class=\"token function\">resolveConstructorOptions</span><span class=\"token punctuation\">(</span>Ctor<span class=\"token punctuation\">.</span>super<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> cachedSuperOptions <span class=\"token operator\">=</span> Ctor<span class=\"token punctuation\">.</span>superOptions\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>superOptions <span class=\"token operator\">!==</span> cachedSuperOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// super option changed,</span>\n      <span class=\"token comment\">// need to resolve new options.</span>\n      Ctor<span class=\"token punctuation\">.</span>superOptions <span class=\"token operator\">=</span> superOptions\n      <span class=\"token comment\">// check if there are any late-modified/attached options (#4976)</span>\n      <span class=\"token keyword\">const</span> modifiedOptions <span class=\"token operator\">=</span> <span class=\"token function\">resolveModifiedOptions</span><span class=\"token punctuation\">(</span>Ctor<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// update base extend options</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modifiedOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>Ctor<span class=\"token punctuation\">.</span>extendOptions<span class=\"token punctuation\">,</span> modifiedOptions<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      options <span class=\"token operator\">=</span> Ctor<span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> <span class=\"token function\">mergeOptions</span><span class=\"token punctuation\">(</span>superOptions<span class=\"token punctuation\">,</span> Ctor<span class=\"token punctuation\">.</span>extendOptions<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span>components<span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Ctor\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> options\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">resolveModifiedOptions</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Ctor</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token operator\">?</span>Object <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">src/core/instance/init.js</code> 파일 내용입니다. 코드가 조금 길어서, 이야기 할 내용을 제외하고 많이 생략하였습니다.</p>\n<ul>\n<li><code class=\"language-text\">initMixin</code> 함수를 정의 합니다. 이 함수 안에서 <code class=\"language-text\">Vue.prototype._init</code> 함수를 정의합니다. 이 함수가 <code class=\"language-text\">src/core/instance/index.js</code> 파일에 코어 함수에서 이야기 한 <code class=\"language-text\">this._init</code> 함수 입니다. 밑에서 더 자세히 이야기 될 테니 기억해 주세요.</li>\n<li><code class=\"language-text\">initInternalComponent</code> 함수를 정의 합니다. <code class=\"language-text\">initMixin</code> 함수에 적힌 주석에 따르면, 동적으로 option을 merge 하는 것은 매우 느리기 때문에 internal component 인스턴스화를 최적화 하기 위해 사용되었다고 합니다.</li>\n<li><code class=\"language-text\">resolveConstructorOptions</code> 함수를 정의 합니다. option들을 모으는 함수 입니다.</li>\n<li><code class=\"language-text\">resolveModifiedOptions</code> 함수를 정의 합니다. 이 함수는 <code class=\"language-text\">resolveConstructorOptions</code> 함수에서 사용되고, <code class=\"language-text\">resolveConstructorOptions</code> 함수에 적힌 주석에 따르면, <a href=\"https://github.com/vuejs/vue/issues/4976\">#4976 hot-reload</a> 버그와 연관 되어 있다고 합니다.</li>\n</ul>\n<h2 id=\"statemixin-함수\" style=\"position:relative;\"><code class=\"language-text\">stateMixin</code> 함수<a href=\"#statemixin-%ED%95%A8%EC%88%98\" aria-label=\"statemixin 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">stateMixin</code> 함수는 <code class=\"language-text\">src/core/instance/state.js</code>에 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">stateMixin</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Vue</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// flow somehow has problems with directly declared definition object</span>\n  <span class=\"token comment\">// when using Object.defineProperty, so we have to procedurally build up</span>\n  <span class=\"token comment\">// the object here.</span>\n  <span class=\"token keyword\">const</span> dataDef <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dataDef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> propsDef <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  propsDef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_props <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dataDef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">set</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Avoid replacing instance root $data. '</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">'Use nested data properties instead.'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    propsDef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">set</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">$props is readonly.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">'$data'</span><span class=\"token punctuation\">,</span> dataDef<span class=\"token punctuation\">)</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">'$props'</span><span class=\"token punctuation\">,</span> propsDef<span class=\"token punctuation\">)</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$set <span class=\"token operator\">=</span> <span class=\"token keyword\">set</span>\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">delete</span> <span class=\"token operator\">=</span> del\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$watch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\"><span class=\"token literal-property property\">expOrFn</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> Function<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cb</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object</span>\n  <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Function <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">vm</span><span class=\"token operator\">:</span> Component <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">createWatcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    options <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    options<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">const</span> watcher <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>immediate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">cb</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> watcher<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">callback for immediate watcher \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>watcher<span class=\"token punctuation\">.</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">unwatchFn</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      watcher<span class=\"token punctuation\">.</span><span class=\"token function\">teardown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">stateMixin</code> 함수 코드입니다.</p>\n<ul>\n<li><code class=\"language-text\">dataDef</code>의 getter를 정의합니다.</li>\n<li><code class=\"language-text\">propsDef</code>의 getter를 정의 합니다.</li>\n<li>production 모드가 아닐 경우에만 <code class=\"language-text\">dataDef</code>와 <code class=\"language-text\">propsDef</code>의 setter를 정의 합니다. setter의 역할을 경고 로그를 출력하는 역할만 합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$data</code>에 <code class=\"language-text\">dataDef</code>를 저장합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$props</code>에 <code class=\"language-text\">propsDef</code>를 저장합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$set</code>를 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$delete</code>를 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$watch</code>를 정의합니다.</li>\n</ul>\n<p><code class=\"language-text\">$data</code>, <code class=\"language-text\">$props</code>, <code class=\"language-text\">$set</code>, <code class=\"language-text\">$delete</code>, <code class=\"language-text\">$watch</code>는 Vue를 사용하면서 한번쯤 보았던 이름들입니다.<br />\n<code class=\"language-text\">Watcher</code>가 사용되는 것을 볼 수 있습니다. <code class=\"language-text\">Watcher</code>는 data와 view의 동기를 맞춰주는 역할을 합니다.</p>\n<h2 id=\"eventsmixin-함수\" style=\"position:relative;\"><code class=\"language-text\">eventsMixin</code> 함수<a href=\"#eventsmixin-%ED%95%A8%EC%88%98\" aria-label=\"eventsmixin 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">eventsMixin</code> 함수는 <code class=\"language-text\">src/core/instance/events.js</code>에 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">eventsMixin</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Vue</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> hookRE <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^hook:</span><span class=\"token regex-delimiter\">/</span></span>\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$on</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fn</span><span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$once</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fn</span><span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$off</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> fn<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$emit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">eventsMixin</code> 함수 코드입니다. 세부 내용은 생략하였습니다.</p>\n<ul>\n<li><code class=\"language-text\">Vue.prototype.$on</code>을 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$once</code>을 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$off</code>을 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$emit</code>을 정의합니다.</li>\n</ul>\n<p>Vue를 사용하면서 익숙하게 보아온 이벤트 함수들의 정의가 이 곳에서 일어납니다.</p>\n<h2 id=\"lifecyclemixin-함수\" style=\"position:relative;\"><code class=\"language-text\">lifecycleMixin</code> 함수<a href=\"#lifecyclemixin-%ED%95%A8%EC%88%98\" aria-label=\"lifecyclemixin 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">lifecycleMixin</code> 함수는 <code class=\"language-text\">src/core/instance/lifecycle.js</code>에 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">lifecycleMixin</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Vue</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">_update</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">vnode</span><span class=\"token operator\">:</span> VNode<span class=\"token punctuation\">,</span> hydrating<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$forceUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$destroy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">mountComponent</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token literal-property property\">vm</span><span class=\"token operator\">:</span> Component<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token operator\">?</span>Element<span class=\"token punctuation\">,</span>\n  hydrating<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span></code></pre></div>\n<p><code class=\"language-text\">src/core/instance/lifecycle.js</code> 코드 부분입니다. 이야기할 부분을 제외하고 모두 생략하였습니다.</p>\n<p><code class=\"language-text\">lifecycleMixin</code> 함수는</p>\n<ul>\n<li><code class=\"language-text\">Vue.prototype._update</code>를 정의합니다. DOM 업데이트가 이곳에서 일어 납니다. <a href=\"/tech/vuejs/view-render-patch/\">9. View Render - Patch</a>에서 자세히 이야기 하도록 하겠습니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$forceUpdate</code>를 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype.$destroy</code>를 정의합니다.</li>\n</ul>\n<p><code class=\"language-text\">lifecycleMixin</code> 함수 바로 아래 <code class=\"language-text\">mountComponent</code> 함수가 있습니다. 이 함수는 <a href=\"/tech/vuejs/initialize-vue-core-function/#srcplatformswebruntimeindexjs-%ED%8C%8C%EC%9D%BC\">2. Initialize - Vue 코어 함수</a>에서 잠깐 언급 된 적이 있습니다. <code class=\"language-text\">Vue.prototype.$mount</code>는 <code class=\"language-text\">mountComponent</code> 함수 호출 값을 리턴합니다. 이전 포스트에서 2번 캡슐화 된다고 이야기 했습니다. 결국 <code class=\"language-text\">$mount</code>는 <code class=\"language-text\">mountComponent</code>를 2번 캡슐화 한 함수입니다. <code class=\"language-text\">mountComponent</code> 함수는 <a href=\"/tech/vuejs/view-render-patch/\">9. View Render - Patch</a>에서 자세히 이야기 할 것입니다.</p>\n<p><code class=\"language-text\">src/core/instance/lifecycle.js</code> 파일에는 이외의 몇개의 함수가 존재합니다. 이 함수들은 DOM을 업데이트 하는데 사용됩니다.</p>\n<h2 id=\"rendermixin-함수\" style=\"position:relative;\"><code class=\"language-text\">renderMixin</code> 함수<a href=\"#rendermixin-%ED%95%A8%EC%88%98\" aria-label=\"rendermixin 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">renderMixin</code> 함수는 <code class=\"language-text\">src/core/instance/render.js</code>에 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">renderMixin</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">Vue</span><span class=\"token operator\">:</span> Class<span class=\"token operator\">&lt;</span>Component<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// install runtime convenience helpers</span>\n  <span class=\"token function\">installRenderHelpers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$nextTick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">fn</span><span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">_render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VNode <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">renderMixin</code> 함수 코드입니다. 이 코드 역시 많이 생략하였습니다.</p>\n<ul>\n<li><code class=\"language-text\">Vue.prototype.$nextTick</code> 함수를 정의합니다.</li>\n<li><code class=\"language-text\">Vue.prototype._render</code> 함수를 정의합니다.</li>\n</ul>\n<h2 id=\"요약\" style=\"position:relative;\">요약<a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Mixin 레이어에서는 <code class=\"language-text\">Vue.prototype</code>안에 몇가지 함수와 객체들을 정의합니다.<br />\n아래 그림은 Mixin들이 정의하는 함수, 객체들의 목록을 나타낸 그림입니다.</p>\n<p><img src=\"/assets/img/posts/vuejs/vue_mixin.png\" alt=\"Vue Mixin\"></p>\n<ul>\n<li><strong>initMixin</strong>: <code class=\"language-text\">_init()</code>를 정의합니다.</li>\n<li><strong>stateMixin</strong>: <code class=\"language-text\">$data</code>, <code class=\"language-text\">$props</code>, <code class=\"language-text\">$set()</code>, <code class=\"language-text\">$delete()</code>, <code class=\"language-text\">$watch()</code>를 정의합니다.</li>\n<li><strong>eventsMixin</strong>: <code class=\"language-text\">$on()</code>, <code class=\"language-text\">$once()</code>, <code class=\"language-text\">$off()</code>, <code class=\"language-text\">$emit()</code>를 정의합니다.</li>\n<li><strong>lifecycleMixin</strong>: <code class=\"language-text\">_update()</code>, <code class=\"language-text\">$forceUpdate()</code>, <code class=\"language-text\">$destroy()</code>를 정의합니다.</li>\n<li><strong>renderMixin</strong>: <code class=\"language-text\">_render()</code>를 정의합니다.</li>\n</ul>\n<h2 id=\"다음으로-볼-것\" style=\"position:relative;\">다음으로 볼 것<a href=\"#%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EB%B3%BC-%EA%B2%83\" aria-label=\"다음으로 볼 것 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">src/core/instance/index.js</code>의 코어 함수에서 호출하는 <code class=\"language-text\">this._init(options)</code>를 살펴보도록 하겠습니다. <a href=\"/tech/vuejs/initialize-_init-function/\">4. Initialize - _init 함수</a>에서 확인 할 수 있습니다.</p>\n<h5 id=\"참고\" style=\"position:relative;\">참고<a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<ul>\n<li><a href=\"https://github.com/numbbbbb/read-vue-source-code/blob/master/03-init-introduction.md\">https://github.com/numbbbbb/read-vue-source-code/blob/master/03-init-introduction.md</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#initmixin-%ED%95%A8%EC%88%98\"><code class=\"language-text\">initMixin</code> 함수</a></li>\n<li><a href=\"#statemixin-%ED%95%A8%EC%88%98\"><code class=\"language-text\">stateMixin</code> 함수</a></li>\n<li><a href=\"#eventsmixin-%ED%95%A8%EC%88%98\"><code class=\"language-text\">eventsMixin</code> 함수</a></li>\n<li><a href=\"#lifecyclemixin-%ED%95%A8%EC%88%98\"><code class=\"language-text\">lifecycleMixin</code> 함수</a></li>\n<li><a href=\"#rendermixin-%ED%95%A8%EC%88%98\"><code class=\"language-text\">renderMixin</code> 함수</a></li>\n<li><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></li>\n<li><a href=\"#%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EB%B3%BC-%EA%B2%83\">다음으로 볼 것</a></li>\n</ul>","timeToRead":7,"excerpt":"이번 포스트에서는 2. Initialize - Vue 코어 함수에서 이야기 했던  파일의  5개의 mixin…","frontmatter":{"title":"[Inside Vue] 3. Initialize - Mixin Layer","thumbnail":"vuejs/vuejs.png","summary":"Vue 코어 함수의 mixin 레이어를 이야기할 것입니다."},"fields":{"createdDate":"2019-09-06"}}},"pageContext":{"slug":"/tech/vuejs/initialize-mixin-layer/","image":"vuejs/vuejs.png","next":{"frontmatter":{"title":"[Inside Vue] 4. Initialize - _init 함수"},"fields":{"slug":"/tech/vuejs/initialize-_init-function/"}},"previous":{"frontmatter":{"title":"[Inside Vue] 2. Initialize - Vue 코어 함수"},"fields":{"slug":"/tech/vuejs/initialize-vue-core-function/"}}}},"staticQueryHashes":["1817256549","2192852387","3417480192"]}