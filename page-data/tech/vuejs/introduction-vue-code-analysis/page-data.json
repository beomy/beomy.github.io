{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/vuejs/introduction-vue-code-analysis/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://beomy.github.io"}},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3667f690df14d116a821ba4acb8686fb/f635c/vuejs.png","srcSet":"/static/3667f690df14d116a821ba4acb8686fb/a5da5/vuejs.png 300w,\n/static/3667f690df14d116a821ba4acb8686fb/cadb4/vuejs.png 750w,\n/static/3667f690df14d116a821ba4acb8686fb/feb73/vuejs.png 1080w,\n/static/3667f690df14d116a821ba4acb8686fb/6032c/vuejs.png 1366w,\n/static/3667f690df14d116a821ba4acb8686fb/3d4b2/vuejs.png 1920w,\n/static/3667f690df14d116a821ba4acb8686fb/f635c/vuejs.png 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/static/3667f690df14d116a821ba4acb8686fb/29f5b/vuejs.webp 300w,\n/static/3667f690df14d116a821ba4acb8686fb/11ba1/vuejs.webp 750w,\n/static/3667f690df14d116a821ba4acb8686fb/089e1/vuejs.webp 1080w,\n/static/3667f690df14d116a821ba4acb8686fb/ad4fd/vuejs.webp 1366w,\n/static/3667f690df14d116a821ba4acb8686fb/d8a73/vuejs.webp 1920w,\n/static/3667f690df14d116a821ba4acb8686fb/a28c0/vuejs.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":1000}}},"markdownRemark":{"html":"<p>Vue를 사용하면서, Vue의 코드를 한번 분석해 보고 싶었습니다. Vue를 GitHub에서 받고 코드를 열어 봤지만 어디서부터 봐야 하는지 몰라, 분석하고 싶은 생각을 저리저리~ 뒤로 미루던 차에 <a href=\"https://github.com/numbbbbb/read-vue-source-code\">코드 분석에 도움이 되는 포스트</a>를 발견하였습니다. 이 포스트를 토대로 Vue 코드를 분석해 나가려고 합니다.</p>\n<h2 id=\"준비물\" style=\"position:relative;\">준비물<a href=\"#%EC%A4%80%EB%B9%84%EB%AC%BC\" aria-label=\"준비물 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Vue 소스 코드를 파헤쳐 보기 전에, 2가지 준비물이 있습니다. 모두 당연한 것들이기 때문에 준비하는 것이 전혀 어렵지 않습니다.</p>\n<h3 id=\"editor\" style=\"position:relative;\">Editor<a href=\"#editor\" aria-label=\"editor permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>가장 먼저 코드를 살펴볼 수 있도록 editor를 설치하도록 하겠습니다. 저는 VSCode를 사용하였습니다.<br />\n<a href=\"https://code.visualstudio.com/\">VSCode 설치</a></p>\n<h3 id=\"source-code\" style=\"position:relative;\">Source Code<a href=\"#source-code\" aria-label=\"source code permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>다음으로는 당연히 살펴볼 소스코드가 있어야 하겠죠.</p>\n<p><img src=\"/assets/img/posts/vuejs/install_vue.gif\" alt=\"install vue\"></p>\n<p>Git을 사용하여 <a href=\"https://github.com/vuejs/vue\">Vue의 GitHub</a>에서 소스 코드를 내려 받도록 하겠습니다. 2.6.10 버전의 vue로 코드 분석을 진행하도록 하겠습니다. 제가 포스팅 하면서 본 Vue 코드는 Fork하여 <a href=\"https://github.com/beomy/vue\">Vue Repository</a>에 등록하였습니다.</p>\n<h2 id=\"entry-찾기\" style=\"position:relative;\">Entry 찾기<a href=\"#entry-%EC%B0%BE%EA%B8%B0\" aria-label=\"entry 찾기 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>어디서 부터 시작하지? 커다란 오픈 소스를 분석 할 때 당연히 떠오르는 질문입니다. Vue는 npm 패키지입니다. Vue는 node.js 환경에서 빌드 되기 때문에 package.json 파일을 열어서 어디서부터 코드 분석을 시작해야 할 지 확인해 보도록 하겠습니다.</p>\n<h3 id=\"packagejson-파일\" style=\"position:relative;\"><code class=\"language-text\">package.json</code> 파일<a href=\"#packagejson-%ED%8C%8C%EC%9D%BC\" aria-label=\"packagejson 파일 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">package.json</code>을 열어보면,</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.6.10\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Reactive, component-oriented view layer for modern web interfaces.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/vue.runtime.common.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/vue.runtime.esm.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"unpkg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/vue.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"jsdelivr\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/vue.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"typings\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"types/index.d.ts\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"dist/*.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"types/*.d.ts\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -w -c scripts/config.js --environment TARGET:web-full-dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev:cjs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -w -c scripts/config.js --environment TARGET:web-runtime-cjs-dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev:esm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -w -c scripts/config.js --environment TARGET:web-runtime-esm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev:test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"karma start test/unit/karma.dev.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev:ssr\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -w -c scripts/config.js --environment TARGET:web-server-renderer\"</span><span class=\"token punctuation\">,</span>\n    ...</code></pre></div>\n<h4 id=\"--main-module-unpkg-jsdelivr\" style=\"position:relative;\">- <code class=\"language-text\">main</code>, <code class=\"language-text\">module</code>, <code class=\"language-text\">unpkg</code>, <code class=\"language-text\">jsdelivr</code><a href=\"#--main-module-unpkg-jsdelivr\" aria-label=\"  main module unpkg jsdelivr permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">main</code>, <code class=\"language-text\">module</code>, <code class=\"language-text\">unpkg</code>, <code class=\"language-text\">jsdelivr</code> 옵션에 <code class=\"language-text\">dist/</code> 값들이 있는 것을 확인 할 수 있습니다. <code class=\"language-text\">dist</code> 디렉토리와 하위에 있는 파일들은 빌드을 하면 자동으로 생성되는 파일들입니다. 즉 이 옵션들이 가르키는 값들은 빌드되어 생성된 결과물입니다.</p>\n<h4 id=\"--typings\" style=\"position:relative;\">- <code class=\"language-text\">typings</code><a href=\"#--typings\" aria-label=\"  typings permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">typings</code>는 TypeScript를 정의한 파일을 나타내는 옵션입니다. Vue 코드는 TypeScript로 작성되어 있기 때문에, TypeScript를 알고 계신다면 더 쉽게 코드를 분석해 나갈 수 있습니다.</p>\n<p><code class=\"language-text\">types/index.d.ts</code> 파일에 정의된 type들을 볼 수 있습니다.</p>\n<h4 id=\"--files\" style=\"position:relative;\">- <code class=\"language-text\">files</code><a href=\"#--files\" aria-label=\"  files permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">files</code> 옵션은 npm 옵션 중 하나로, 패키지가 의존성으로 설치될 때 같이 포함될 파일들의 배열입니다. <code class=\"language-text\">files</code> 옵션에는 3개의 경로들이 지정되어 있습니다. 포함된 경로 중에 <code class=\"language-text\">src</code>가 있는데, 이 디렉토리에 Vue 코드들이 모여 있습니다.</p>\n<h4 id=\"--sideeffects\" style=\"position:relative;\">- <code class=\"language-text\">sideEffects</code><a href=\"#--sideeffects\" aria-label=\"  sideeffects permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">sideEffects</code> 옵션은 <a href=\"https://webpack.js.org/configuration/optimization/#optimizationsideeffects\">webpack 옵션</a> 중 하나 입니다. 자세한 설명은 링크를 참고 부탁드립니다.</p>\n<h4 id=\"--scripts\" style=\"position:relative;\">- <code class=\"language-text\">scripts</code><a href=\"#--scripts\" aria-label=\"  scripts permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">scripts</code> 옵션은 node.js 명령 스크립트를 정의하는 옵션입니다. <code class=\"language-text\">scripts</code> 옵션의 <code class=\"language-text\">dev</code>를 살펴 보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rollup -w -c scripts/config.js --environment TARGET:web-full-dev</code></pre></div>\n<p>이렇게 정의 되어 있습니다. <code class=\"language-text\">scripts/config.js</code> 파일에 <code class=\"language-text\">web-full-dev</code>를 찾아 보도록 하겠습니다.</p>\n<h3 id=\"scriptsconfigjs-파일\" style=\"position:relative;\"><code class=\"language-text\">scripts/config.js</code> 파일<a href=\"#scriptsconfigjs-%ED%8C%8C%EC%9D%BC\" aria-label=\"scriptsconfigjs 파일 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">scripts/config.js</code> 파일에서 <code class=\"language-text\">web-full-dev</code>를 검색하면,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Runtime+compiler development build (Browser)</span>\n<span class=\"token string-property property\">'web-full-dev'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime-with-compiler.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">dest</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">he</span><span class=\"token operator\">:</span> <span class=\"token string\">'./entity-decoder'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  banner\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>위의 코드를 찾을 수 있습니다. 드디어 <code class=\"language-text\">resolve('web/entry-runtime-with-compiler.js')</code>라는 entry를 찾게 되었습니다. <code class=\"language-text\">web/entry-runtime-with-compiler.js</code> 파일의 실제 위치를 찾기 위해서는 <code class=\"language-text\">resolve</code> 함수를 살펴 보아야 합니다.</p>\n<h4 id=\"resolve-함수\" style=\"position:relative;\"><code class=\"language-text\">resolve</code> 함수<a href=\"#resolve-%ED%95%A8%EC%88%98\" aria-label=\"resolve 함수 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> aliases <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./alias'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">resolve</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> base <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aliases<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>aliases<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">scripts/config.js</code> 파일 상단에서 위의 코드와 같이 <code class=\"language-text\">resolve</code> 함수를 찾을 수 있습니다. <code class=\"language-text\">resolve</code> 함수는 <a href=\"https://nodejs.org/docs/latest/api/path.html#path_path_resolve_paths\">path.resolve</a> 결과 값을 리턴합니다. <code class=\"language-text\">resolve</code> 함수는 <code class=\"language-text\">web/entry-runtime-with-compiler.js</code>를 전달 받으면,</p>\n<ul>\n<li><code class=\"language-text\">p</code>는 <code class=\"language-text\">web/entry-runtime-with-compiler.js</code>가 됩니다.</li>\n<li><code class=\"language-text\">base</code>에는 <code class=\"language-text\">web</code>이 저장됩니다.</li>\n<li><code class=\"language-text\">path.resolve</code>에  <code class=\"language-text\">aliaes[base]</code>와 <code class=\"language-text\">entry-runtime-with-compiler.js</code>가 전달됩니다.</li>\n</ul>\n<p>이제 <code class=\"language-text\">aliaes[base]</code>의 값을 살펴보기 위해 <code class=\"language-text\">aliaes</code> 객체를 살펴보도록 하겠습니다.</p>\n<h4 id=\"aliaes-객체\" style=\"position:relative;\"><code class=\"language-text\">aliaes</code> 객체<a href=\"#aliaes-%EA%B0%9D%EC%B2%B4\" aria-label=\"aliaes 객체 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">aliaes</code> 객체는 <code class=\"language-text\">scripts/alias</code>에 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">resolve</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">vue</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/platforms/web/entry-runtime-with-compiler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">compiler</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/compiler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">core</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/core'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">shared</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/shared'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">web</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/platforms/web'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">weex</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/platforms/weex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">server</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">sfc</span><span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/sfc'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">aliaes</code>는 위의 코드와 같은 객체입니다. <code class=\"language-text\">aliaes['web']</code>은 <code class=\"language-text\">resolve('src/platforms/web')</code>가 됩니다.</p>\n<h3 id=\"srcplatformswebentry-runtime-with-compilerjs-파일\" style=\"position:relative;\"><code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code> 파일<a href=\"#srcplatformswebentry-runtime-with-compilerjs-%ED%8C%8C%EC%9D%BC\" aria-label=\"srcplatformswebentry runtime with compilerjs 파일 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>위의 내용과 같이 코드를 분석한 결과 <code class=\"language-text\">web/entry-runtime-with-compiler.js</code>의 실제 위치는 <code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code> 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/* @flow */</span>\n\n<span class=\"token keyword\">import</span> config <span class=\"token keyword\">from</span> <span class=\"token string\">'core/config'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> warn<span class=\"token punctuation\">,</span> cached <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'core/util/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> mark<span class=\"token punctuation\">,</span> measure <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'core/util/perf'</span>\n\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'./runtime/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./util/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> compileToFunctions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./compiler/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> shouldDecodeNewlines<span class=\"token punctuation\">,</span> shouldDecodeNewlinesForHref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./util/compat'</span>\n\n<span class=\"token keyword\">const</span> idToTemplate <span class=\"token operator\">=</span> <span class=\"token function\">cached</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> el <span class=\"token operator\">&amp;&amp;</span> el<span class=\"token punctuation\">.</span>innerHTML\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> mount <span class=\"token operator\">=</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$mount\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$mount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">el<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> Element<span class=\"token punctuation\">,</span>\n  hydrating<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Component <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$options\n  <span class=\"token comment\">// resolve template/el and convert to render function</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>template\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> template <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          template <span class=\"token operator\">=</span> <span class=\"token function\">idToTemplate</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        template <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span>innerHTML\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      template <span class=\"token operator\">=</span> <span class=\"token function\">getOuterHTML</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">,</span> hydrating<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getOuterHTML</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> Element</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> el<span class=\"token punctuation\">.</span>outerHTML\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> container<span class=\"token punctuation\">.</span>innerHTML\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nVue<span class=\"token punctuation\">.</span>compile <span class=\"token operator\">=</span> compileToFunctions\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Vue</code></pre></div>\n<p><code class=\"language-text\">entry-runtime-with-compiler.js</code>의 첫번 째 줄에 정의 된 <code class=\"language-text\">/* @flow */</code>는 type checker 입니다. <a href=\"https://flow.org/en/\">flow</a>는 <code class=\"language-text\">package.json</code>에서 살펴 본 <code class=\"language-text\">typings</code>의 타입들을 체크 하는 역할을 합니다.</p>\n<p><code class=\"language-text\">entry-runtime-with-compiler.js</code>가 수행하는 일들은 아래와 같습니다,</p>\n<ul>\n<li><code class=\"language-text\">config</code>를 import 합니다.</li>\n<li>유틸 함수들을 import 합니다.</li>\n<li><code class=\"language-text\">Vue</code>를 import 합니다.</li>\n<li><code class=\"language-text\">idToTemplate</code>를 정의합니다.</li>\n<li><code class=\"language-text\">getOuterHTML</code>를 정의합니다.</li>\n<li><code class=\"language-text\">idTotemplate</code>와 <code class=\"language-text\">getOuterHTML</code>를 사용하여 <code class=\"language-text\">Vue.prototype.$mount</code>를 정의합니다.</li>\n<li><code class=\"language-text\">Vue.compile</code>를 정의합니다</li>\n</ul>\n<p>2가지 내용을 집중해야 합니다.</p>\n<ol>\n<li>이 코드는 Vue 코어 코드가 아닙니다. <code class=\"language-text\">entry-runtime-with-compiler.js</code> 이라는 파일 이름에서 알 수 있듯이 단순 entry 역할(코어 코드를 감싸는 역할)을 할 뿐입니다. 코어 코드는 다음 포스트에서 자세히 이야기 하도록 하겠습니다.</li>\n<li><code class=\"language-text\">$mount</code>를 따로 저장하고, 새로운 <code class=\"language-text\">$mount</code>를 정의하여 몇가지 검증을 한 후 저장한 <code class=\"language-text\">$mount</code>를 호출합니다.(캡슐화하는 부분입니다.) 즉, 실제 <code class=\"language-text\">$mount</code>를 호출하기 전에 몇가지 검증을 추가하는 코드입니다.</li>\n</ol>\n<h2 id=\"요약\" style=\"position:relative;\">요약<a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><code class=\"language-text\">package.json</code>의 <code class=\"language-text\">scripts</code>의 <code class=\"language-text\">dev</code>의 값인 <code class=\"language-text\">rollup -w -c scripts/config.js --environment TARGET:web-full-dev</code>를 시작으로 코드 리딩을 시작합니다.</li>\n<li><code class=\"language-text\">scripts/config.js</code>파일을 거쳐 <code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code> 파일에 도착하였습니다.</li>\n</ol>\n<p><code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code>는 Vue 코어 코드가 아닌 entry 역할만 하는 코드입니다.</p>\n<h2 id=\"다음으로-볼-것\" style=\"position:relative;\">다음으로 볼 것<a href=\"#%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EB%B3%BC-%EA%B2%83\" aria-label=\"다음으로 볼 것 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>다음 포스트(<a href=\"/tech/vuejs/initialize-vue-core-function/\">2. Initialize - Vue 코어 함수</a>)에서는 Vue 코어 함수를 찾을 것입니다. <code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code> 파일에 정의 된 <code class=\"language-text\">import Vue from './runtime/index'</code>을 실마리로 <code class=\"language-text\">src/platforms/web/runtime/index.js</code> 파일을 시작으로 코드를 따라 갈 것입니다.</p>\n<h5 id=\"참고\" style=\"position:relative;\">참고<a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<ul>\n<li><a href=\"https://github.com/numbbbbb/read-vue-source-code/blob/master/01-find-the-entry.md\">https://github.com/numbbbbb/read-vue-source-code/blob/master/01-find-the-entry.md</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%A4%80%EB%B9%84%EB%AC%BC\">준비물</a></p>\n<ul>\n<li><a href=\"#editor\">Editor</a></li>\n<li><a href=\"#source-code\">Source Code</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#entry-%EC%B0%BE%EA%B8%B0\">Entry 찾기</a></p>\n<ul>\n<li><a href=\"#packagejson-%ED%8C%8C%EC%9D%BC\"><code class=\"language-text\">package.json</code> 파일</a></li>\n<li><a href=\"#scriptsconfigjs-%ED%8C%8C%EC%9D%BC\"><code class=\"language-text\">scripts/config.js</code> 파일</a></li>\n<li><a href=\"#srcplatformswebentry-runtime-with-compilerjs-%ED%8C%8C%EC%9D%BC\"><code class=\"language-text\">src/platforms/web/entry-runtime-with-compiler.js</code> 파일</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EB%B3%BC-%EA%B2%83\">다음으로 볼 것</a></p>\n</li>\n</ul>","timeToRead":7,"excerpt":"Vue를 사용하면서, Vue의 코드를 한번 분석해 보고 싶었습니다. Vue를 GitHub…","frontmatter":{"title":"[Inside Vue] 1. Introduction - Vue Code 분석","thumbnail":"vuejs/vuejs.png","summary":"Vue의 코드를 분석하기 전에 준비 사항과 분석을 시작하는 과정을 이야기할 것입니다."},"fields":{"createdDate":"2019-09-04"}}},"pageContext":{"slug":"/tech/vuejs/introduction-vue-code-analysis/","image":"vuejs/vuejs.png","next":{"frontmatter":{"title":"[Inside Vue] 2. Initialize - Vue 코어 함수"},"fields":{"slug":"/tech/vuejs/initialize-vue-core-function/"}},"previous":null}},"staticQueryHashes":["1817256549","2192852387","3417480192"]}